@page "/rentals"
@using CarRental.Controllers.RentalModule
@using CarRental.Domain.RentalModule

<PageTitle>Rentals - Car Rental System</PageTitle>

<h1>Rentals</h1>

<div class="mb-3">
    <a href="/rentals/new" class="btn btn-primary">Add New Rental</a>
</div>

@if (rentals == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Vehicle</th>
                    <th>Customer</th>
                    <th>Driver</th>
                    <th>Departure Date</th>
                    <th>Expected Return</th>
                    <th>Return Date</th>
                    <th>Plan Type</th>
                    <th>Rental Price</th>
                    <th>Return Price</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var rental in rentals)
                {
                    <tr>
                        <td>@rental.Id</td>
                        <td>@rental.Vehicle.Brand @rental.Vehicle.Model (@rental.Vehicle.LicensePlate)</td>
                        <td>@rental.ContractingCustomer.Name</td>
                        <td>@(rental.DriverCustomer?.Name ?? "Same as contracting")</td>
                        <td>@rental.DepartureDate.ToString("yyyy-MM-dd")</td>
                        <td>@rental.ExpectedReturnDate.ToString("yyyy-MM-dd")</td>
                        <td>@(rental.ReturnDate == DateTime.MaxValue ? "Not returned" : rental.ReturnDate.ToString("yyyy-MM-dd"))</td>
                        <td>@rental.PlanType</td>
                        <td>$@rental.RentalPrice.ToString("F2")</td>
                        <td>$@rental.ReturnPrice.ToString("F2")</td>
                        <td>
                            @if (rental.IsOpen)
                            {
                                <span class="badge bg-warning">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-success">Returned</span>
                            }
                        </td>
                        <td>
                            <div class="btn-group">
                                <a href="/rentals/@rental.Id" class="btn btn-sm btn-info">Details</a>
                                @if (rental.IsOpen)
                                {
                                    <a href="/rentals/return/@rental.Id" class="btn btn-sm btn-warning">Return</a>
                                }
                                <button class="btn btn-sm btn-danger" @onclick="() => DeleteRental(rental.Id)">Delete</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    [Inject]
    private RentalController RentalController { get; set; } = default!;
    
    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    private List<Rental>? rentals;

    protected override void OnInitialized()
    {
        LoadRentals();
    }

    private void LoadRentals()
    {
        rentals = RentalController.SelectAll();
    }

    private void DeleteRental(int id)
    {
        bool confirmed = true; // In a real app, you'd use a confirmation dialog
        if (confirmed)
        {
            RentalController.Delete(id);
            LoadRentals();
        }
    }
}