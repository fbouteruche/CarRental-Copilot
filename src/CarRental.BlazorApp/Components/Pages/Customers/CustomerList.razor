@page "/customers"
@using CarRental.Controllers.CustomersModule
@using CarRental.Domain.CustomerModule

<PageTitle>Customers - Car Rental System</PageTitle>

<h1>Customers</h1>

<div class="mb-3">
    <a href="/customers/new" class="btn btn-primary">Add New Customer</a>
</div>

@if (customers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Unique ID</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var customer in customers)
                {
                    <tr>
                        <td>@customer.Id</td>
                        <td>@customer.Name</td>
                        <td>@customer.UniqueId</td>
                        <td>@customer.Email</td>
                        <td>@customer.Phone</td>
                        <td>
                            <div class="btn-group">
                                <a href="/customers/@customer.Id" class="btn btn-sm btn-info">Details</a>
                                <a href="/customers/edit/@customer.Id" class="btn btn-sm btn-warning">Edit</a>
                                <button class="btn btn-sm btn-danger" @onclick="() => DeleteCustomer(customer.Id)">Delete</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    [Inject]
    private CustomerController CustomerController { get; set; } = default!;
    
    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    private List<Customer>? customers;

    protected override void OnInitialized()
    {
        LoadCustomers();
    }

    private void LoadCustomers()
    {
        customers = CustomerController.SelectAll();
    }

    private void DeleteCustomer(int id)
    {
        bool confirmed = true; // In a real app, you'd use a confirmation dialog
        if (confirmed)
        {
            CustomerController.Delete(id);
            LoadCustomers();
        }
    }
}